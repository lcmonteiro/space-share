/**
 * ------------------------------------------------------------------------------------------------ 
 * File:  SIDirConnector.h
 * Author: Luis Monteiro
 *
 * Created on November 26, 2015, 12:37 PM
 * ------------------------------------------------------------------------------------------------
 */
#ifndef SIDIRCONNECTOR_H
#define SIDIRCONNECTOR_H
/**
 * space 
 */
#include "SDirectoryResource.h"
/**
 * share
 */
#include "SDocument.h"
#include "SConnector.h"
/**
 * -----------------------------------------------------------------------------------------------
 * Begin namespace Decoded and massage
 * -----------------------------------------------------------------------------------------------
 */
namespace Decoded {
namespace Message {
/**
 * ------------------------------------------------------------------------------------------------
 * Directory Connector
 * ------------------------------------------------------------------------------------------------
 */
class SIDirConnector : public SInputConnector {
public:
    /**
     * ------------------------------------------------------------------------
     * Constructor
     * ------------------------------------------------------------------------
     */
    SIDirConnector(const SText address, const SText file);
    /**
     * ------------------------------------------------------------------------
     * Get resource
     * ------------------------------------------------------------------------
     */
    inline Resource& resource() override {
        return __res;
    }
protected:
    /**
	 * ------------------------------------------------------------------------
	 * control functions
	 * ------------------------------------------------------------------------
	 * open
     * ----------------------------------------------------
	 */
    void _open() override;
    /**
     * ----------------------------------------------------
     * good
     * ----------------------------------------------------
     */
    inline bool _good() override {
        return __res.good();
    }
    /**
     * ----------------------------------------------------
     * close
     * ----------------------------------------------------
     */
    inline void _close() override {
        __res = SDirectoryResource();
    }
    /**
     * ------------------------------------------------------------------------
     * IO functions
     * ------------------------------------------------------------------------
     * read
     * ----------------------------------------------------
     */
    Document _read() override;
private:
    /**
     * ------------------------------------------------------------------------
     * Variables
     * ------------------------------------------------------------------------
     **
     * resource 
     */
    SDirectoryResource __res;
    /**
     * properties
     */
    std::string __file;
};
/**
 * ------------------------------------------------------------------------------------------------
 * End namespace Decoded & Message
 * ------------------------------------------------------------------------------------------------
 */
}}
#endif /* SIDIRCONNECTOR_H */

