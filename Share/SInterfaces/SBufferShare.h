/**
 * ------------------------------------------------------------------------------------------------
 * File:   SBufferShare.h
 * Author: Luis Monteiro
 *
 * Created on September 14, 2016, 9:49 AM
 * ------------------------------------------------------------------------------------------------
 */
#ifndef SBUFFERSHARE_H
#define SBUFFERSHARE_H
/**
 * std
 */
#include <cstdint>
#include <cstddef>
/**
 * space
 */
#include "SContainer.h"
/**
 * share
 */
#include "SEncoderCodec.h"
#include "SDecoderCodec.h"
/**
 * ------------------------------------------------------------------------------------------------
 * default definitions
 * ------------------------------------------------------------------------------------------------
 */
#define BS_CAPACITY 100
/**
 * ------------------------------------------------------------------------------------------------
 * OBufferShare
 * ------------------------------------------------------------------------------------------------
 */
class OBufferShare {
public:
    /**
     * ------------------------------------------------------------------------
     * Constructor 
     * ------------------------------------------------------------------------
     */
    OBufferShare(size_t capacity = BS_CAPACITY) 
    : __encoder(capacity) {}
    /**
     * ------------------------------------------------------------------------
     * Interfaces
     * ------------------------------------------------------------------------
     **
     * set buffer
     */
    size_t set(const Frame& data, size_t sframes, size_t redundancy = 0);
    /**
     * get coded frame
     */
    Frame get();
protected:
    /**
     * ------------------------------------------------------------------------
     * Variables
     * ------------------------------------------------------------------------
     * encoder
     */
    Codec::SEncoder __encoder;
};
/**
 * ------------------------------------------------------------------------------------------------
 * IBufferShare
 * ------------------------------------------------------------------------------------------------
 */
class IBufferShare {
public:
    /**
     * ------------------------------------------------------------------------
     * Constructor 
     * ------------------------------------------------------------------------
     */
    IBufferShare(size_t capacity = BS_CAPACITY) 
    : __decoder(capacity) {}
    /**
     * ------------------------------------------------------------------------
     * Interfaces
     * ------------------------------------------------------------------------
     **
     * set coded frame
     */
    bool set(Frame frame);
    /**
     * get uncoded buffer
     */
    Frame get();
protected:
    /**
     * ------------------------------------------------------------------------
     * Variables
     * ------------------------------------------------------------------------
     * decoder
     */
    Codec::SDecoder __decoder; 
};
/**
 * ------------------------------------------------------------------------------------------------
 * End
 * ------------------------------------------------------------------------------------------------
 */
#endif /* SBUFFERSHARE_H */

