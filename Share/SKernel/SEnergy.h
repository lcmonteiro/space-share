/**
 * ------------------------------------------------------------------------------------------------ 
 * File:   SEnergy.h
 * Author: Luis Monteiro
 *
 * Created on November 22, 2018, 9:49 AM
 * ------------------------------------------------------------------------------------------------
 */
#ifndef SENERGY_H
#define SENERGY_H
/**
 * ------------------------------------------------------------------------------------------------
 * Energy
 * ------------------------------------------------------------------------------------------------
 */
template <typename Exception>
class SEnergy {
public:
    /**
     * ------------------------------------------------------------------------
     * Constructor
     * ------------------------------------------------------------------------
     */
    SEnergy(size_t energy=0):
    __prev(energy), 
    __curr(energy), 
    __capacity(energy) {}
    /**
     * ------------------------------------------------------------------------
     * Interfaces
     * ------------------------------------------------------------------------
     * Check if is empty
     * ----------------------------------------------------
     */
    inline bool empty() {
        return (__curr == 0) && (__prev == 0);
    }
    /**
     * ----------------------------------------------------
     * Get energy value
     * ----------------------------------------------------
     */
    inline size_t get() {
        return __prev;
    }
    /**
     * ----------------------------------------------------
     * Set energy value
     * ----------------------------------------------------
     */
    inline void set(size_t energy) {
        if(energy > __capacity){
            __curr = __prev = __capacity = energy;
        } else {
            __curr = __prev = energy;
        }
    }
    /**
     * ----------------------------------------------------
     * Decrement energy
     * ----------------------------------------------------
     */
    inline void decay() {
        /**
         * update previous
         */
        __prev = __curr;
        /**
         * check and decrement current
         */
        if(0 == __curr) {
            throw Exception("no energy");
        } else {
            --__curr;
        }
    }
    /**
     * ----------------------------------------------------
     * Cancel decay
     * ----------------------------------------------------
     */
    inline void cancel() {
        if(0 == __prev) {
            throw Exception("no energy");
        } else {
            __curr = __prev;
        }
    }
    /**
     * ----------------------------------------------------
     * Restore energy
     * ----------------------------------------------------
     */
    inline void restore() {
        __curr = __prev = __capacity;
    }
private:
    /**
     * ------------------------------------------------------------------------
     * Variables
     * ------------------------------------------------------------------------
     */
    size_t __prev;
    size_t __curr;
    size_t __capacity;
};
/**
 * ------------------------------------------------------------------------------------------------
 * End
 * ------------------------------------------------------------------------------------------------
 */
#endif /* SENERGY_H */

