/**
 * ------------------------------------------------------------------------------------------------ 
 * File:   SChannel.h
 * Author: root
 *
 * Created on November 23, 2016, 11:43 AM
 * ------------------------------------------------------------------------------------------------
 */
#ifndef SCHANNEL_H
#define SCHANNEL_H
/**
 * std
 */
#include <iostream>
/**
 * ------------------------------------------------------------------------------------------------
 * Channel
 * ------------------------------------------------------------------------------------------------
 */
typedef class SChannel {
public:
	/**
	 * ------------------------------------------------------------------------
	 * Constructors
	 * ------------------------------------------------------------------------
	 */
	SChannel()
	: __is(nullptr), __os(nullptr) {}

	SChannel(
		std::istream::__streambuf_type* ib, 
		std::ostream::__streambuf_type* ob)
	: __is(ib), __os(ob) {}
	/**
	 * ------------------------------------------------------------------------
	 * Move Operator
	 * ------------------------------------------------------------------------
	 */
	inline SChannel& operator=(SChannel && c) {
		/**
		 * swap streams
		 */
		c.__is.rdbuf(__is.rdbuf(c.__is.rdbuf()));
		c.__os.rdbuf(__os.rdbuf(c.__os.rdbuf()));
		/**
		 * return itself
		 */
		return *this;
	}
	/**
	 * ------------------------------------------------------------------------
	 * Streams Operators
	 * ------------------------------------------------------------------------
	 */
	inline operator std::ostream& () {
		return __os;
	}
	inline operator std::istream& () {
		return __is;
	}
	/**
	 * ------------------------------------------------------------------------
	 * IO functions
	 * ------------------------------------------------------------------------
	 */
	template <class V>
	inline std::ostream& operator<<(V v) {
		return __os << v;
	}
	template <class V>
	inline std::istream& operator>>(V& v) {
		return __is >> v;
	}
	/**
	 * ------------------------------------------------------------------------
	 * Utilities
	 * ------------------------------------------------------------------------
	 */
	inline void exceptions(std::ios::iostate ex){
		__is.exceptions(ex);
		__os.exceptions(ex);
	}
private:
	/**
	 * ------------------------------------------------------------------------
	 * Variables
	 * ------------------------------------------------------------------------
	 */
	std::istream __is;
	std::ostream __os;
} Channel;
/**
 * ------------------------------------------------------------------------------------------------
 * End
 * ------------------------------------------------------------------------------------------------
 */
#endif /* SCHANNEL_H */

