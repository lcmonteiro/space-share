/**
 * ------------------------------------------------------------------------------------------------
 * File:   SCommandMonitor.h
 * Author: Luis Monteiro
 *
 * Created on November 26, 2015, 12:37 PM
 * ------------------------------------------------------------------------------------------------
 */
#ifndef SCOMMANDMONITOR_H
#define SCOMMANDMONITOR_H
/**
 * space
 */
#include <SContainer.h>
#include <SAddress.h>
/**
 * -------------------------------------------------------------------------------------------------
 * Command Monitor
 * -------------------------------------------------------------------------------------------------
 */
template<class C, class R>
class SCommandMonitor {
public:
    /**
     * ------------------------------------------------------------------------
     * Helpers
     * ------------------------------------------------------------------------
     */
    using Command  = C;
    using Resource = R;
    /**
     * ------------------------------------------------------------------------
     * Constructor
     * ------------------------------------------------------------------------
     */
    SCommandMonitor(const SAddress& add) : __res() {
        __res.bind(add.host());
    }
    /**
     * ------------------------------------------------------------------------
     * Resource
     * ------------------------------------------------------------------------
     */
    inline Resource& resource() {
        return __res;
     }
    /**
     * ------------------------------------------------------------------------
     * Read Command
     * ------------------------------------------------------------------------
     */
    inline Command read(size_t max = 1024) {
        SFrame frame(max);
        /**
         * read data up to max
         */
        __res.fill(frame);
        /**
         * create a comand (by parse a command)
         */
        return Command(SText(frame.begin(), frame.end()));
    }
private:
    /**
     * ------------------------------------------------------------------------
     * Variables
     * ------------------------------------------------------------------------
     * resource
     */
    Resource __res;
};
/**
 * -------------------------------------------------------------------------------------------------
 * End
 * -------------------------------------------------------------------------------------------------
 */
#endif /* SCOMMANDMONITOR_H */

